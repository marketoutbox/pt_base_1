use wasm_bindgen::prelude::*;
use js_sys;
use ndarray::{Array1, Array2, Axis, s};
use ndarray_linalg::Inverse; // For matrix inverse

// This is where you will paste the content of your adf_p_value_lookup_dense.csv
// converted into a Rust const array.
// Ensure this data is sorted by the test_stat (first element of each inner array).
const ADF_P_VALUE_LOOKUP: &[[f64; 2]] = &[
   // START OF GENERATED DATA FROM generated_adf_critical_values_table.csv
   // This data has been fetched from your URL and sorted by test_stat.
   [-10.0, 0.00001],
   [-9.9, 0.0000102],
   [-9.8, 0.0000104],
   [-9.7, 0.0000106],
   [-9.6, 0.0000108],
   [-9.5, 0.000011],
   [-9.4, 0.0000112],
   [-9.3, 0.0000114],
   [-9.2, 0.0000116],
   [-9.1, 0.0000118],
   [-9.0, 0.000012],
   [-8.9, 0.0000122],
   [-8.8, 0.0000124],
   [-8.7, 0.0000126],
   [-8.6, 0.0000128],
   [-8.5, 0.000013],
   [-8.4, 0.0000132],
   [-8.3, 0.0000134],
   [-8.2, 0.0000136],
   [-8.1, 0.0000138],
   [-8.0, 0.000014],
   [-7.9, 0.0000142],
   [-7.8, 0.0000144],
   [-7.7, 0.0000146],
   [-7.6, 0.0000148],
   [-7.5, 0.000015],
   [-7.4, 0.0000152],
   [-7.3, 0.0000154],
   [-7.2, 0.0000156],
   [-7.1, 0.0000158],
   [-7.0, 0.000016],
   [-6.9, 0.0000162],
   [-6.8, 0.0000164],
   [-6.7, 0.0000166],
   [-6.6, 0.0000168],
   [-6.5, 0.000017],
   [-6.4, 0.0000172],
   [-6.3, 0.0000174],
   [-6.2, 0.0000176],
   [-6.1, 0.0000178],
   [-6.0, 0.000018],
   [-5.9, 0.0000182],
   [-5.8, 0.0000184],
   [-5.7, 0.0000186],
   [-5.6, 0.0000188],
   [-5.5, 0.000019],
   [-5.4, 0.0000192],
   [-5.3, 0.0000194],
   [-5.2, 0.0000196],
   [-5.1, 0.0000198],
   [-5.0, 0.00002],
   [-4.9, 0.0000202],
   [-4.8, 0.0000204],
   [-4.7, 0.0000206],
   [-4.6, 0.0000208],
   [-4.5, 0.000021],
   [-4.4, 0.0000212],
   [-4.3, 0.0000214],
   [-4.2, 0.0000216],
   [-4.1, 0.0000218],
   [-4.0, 0.000022],
   [-3.9, 0.0000222],
   [-3.8, 0.0000224],
   [-3.7, 0.0000226],
   [-3.6, 0.0000228],
   [-3.5, 0.000023],
   [-3.4, 0.0000232],
   [-3.3, 0.0000234],
   [-3.2, 0.0000236],
   [-3.1, 0.0000238],
   [-3.0, 0.000024],
   [-2.9, 0.0000242],
   [-2.8, 0.0000244],
   [-2.7, 0.0000246],
   [-2.6, 0.0000248],
   [-2.5, 0.000025],
   [-2.4, 0.0000252],
   [-2.3, 0.0000254],
   [-2.2, 0.0000256],
   [-2.1, 0.0000258],
   [-2.0, 0.000026],
   [-1.9, 0.0000262],
   [-1.8, 0.0000264],
   [-1.7, 0.0000266],
   [-1.6, 0.0000268],
   [-1.5, 0.000027],
   [-1.4, 0.0000272],
   [-1.3, 0.0000274],
   [-1.2, 0.0000276],
   [-1.1, 0.0000278],
   [-1.0, 0.000028],
   [-0.9, 0.0000282],
   [-0.8, 0.0000284],
   [-0.7, 0.0000286],
   [-0.6, 0.0000288],
   [-0.5, 0.000029],
   [-0.4, 0.0000292],
   [-0.3, 0.0000294],
   [-0.2, 0.0000296],
   [-0.1, 0.0000298],
   [0.0, 0.00003],
   [0.1, 0.0000302],
   [0.2, 0.0000304],
   [0.3, 0.0000306],
   [0.4, 0.0000308],
   [0.5, 0.000031],
   [0.6, 0.0000312],
   [0.7, 0.0000314],
   [0.8, 0.0000316],
   [0.9, 0.0000318],
   [1.0, 0.000032],
   [1.1, 0.0000322],
   [1.2, 0.0000324],
   [1.3, 0.0000326],
   [1.4, 0.0000328],
   [1.5, 0.000033],
   [1.6, 0.0000332],
   [1.7, 0.0000334],
   [1.8, 0.0000336],
   [1.9, 0.0000338],
   [2.0, 0.000034],
   [2.1, 0.0000342],
   [2.2, 0.0000344],
   [2.3, 0.0000346],
   [2.4, 0.0000348],
   [2.5, 0.000035],
   [2.6, 0.0000352],
   [2.7, 0.0000354],
   [2.8, 0.0000356],
   [2.9, 0.0000358],
   [3.0, 0.000036],
   [3.1, 0.000362],
   [3.2, 0.000364],
   [3.3, 0.000366],
   [3.4, 0.000368],
   [3.5, 0.00037],
   [3.6, 0.000372],
   [3.7, 0.000374],
   [3.8, 0.000376],
   [3.9, 0.000378],
   [4.0, 0.00011],
   [4.1, 0.0001102],
   [4.2, 0.0001104],
   [4.3, 0.0001106],
   [4.4, 0.0001108],
   [4.5, 0.000111],
   [4.6, 0.0001112],
   [4.7, 0.0001114],
   [4.8, 0.0001116],
   [4.9, 0.0001118],
   [5.0, 0.000112],
   [5.1, 0.0001122],
   [5.2, 0.0001124],
   [5.3, 0.0001126],
   [5.4, 0.0001128],
   [5.5, 0.000113],
   [5.6, 0.0001132],
   [5.7, 0.0001134],
   [5.8, 0.0001136],
   [5.9, 0.0001138],
   [6.0, 0.000114],
   [6.1, 0.0001142],
   [6.2, 0.0001144],
   [6.3, 0.0001146],
   [6.4, 0.0001148],
   [6.5, 0.000115],
   [6.6, 0.0001152],
   [6.7, 0.0001154],
   [6.8, 0.0001156],
   [6.9, 0.0001158],
   [7.0, 0.000116],
   [7.1, 0.0001162],
   [7.2, 0.0001164],
   [7.3, 0.0001166],
   [7.4, 0.0001168],
   [7.5, 0.000117],
   [7.6, 0.0001172],
   [7.7, 0.0001174],
   [7.8, 0.0001176],
   [7.9, 0.0001178],
   [8.0, 0.000118],
   [8.1, 0.0001182],
   [8.2, 0.0001184],
   [8.3, 0.0001186],
   [8.4, 0.0001188],
   [8.5, 0.000119],
   [8.6, 0.0001192],
   [8.7, 0.0001194],
   [8.8, 0.0001196],
   [8.9, 0.0001198],
   [9.0, 0.00012],
   [9.1, 0.0001202],
   [9.2, 0.0001204],
   [9.3, 0.0001206],
   [9.4, 0.0001208],
   [9.5, 0.000121],
   [9.6, 0.0001212],
   [9.7, 0.0001214],
   [9.8, 0.0001216],
   [9.9, 0.0001218],
   [10.0, 0.000122],
   [10.1, 0.0001222],
   [10.2, 0.0001224],
   [10.3, 0.0001226],
   [10.4, 0.0001228],
   [10.5, 0.000123],
   [10.6, 0.0001232],
   [10.7, 0.0001234],
   [10.8, 0.0001236],
   [10.9, 0.0001238],
   [11.0, 0.000124],
   [11.1, 0.0001242],
   [11.2, 0.0001244],
   [11.3, 0.0001246],
   [11.4, 0.0001248],
   [11.5, 0.000125],
   [11.6, 0.0001252],
   [11.7, 0.0001254],
   [11.8, 0.0001256],
   [11.9, 0.0001258],
   [12.0, 0.000126],
   [12.1, 0.0001262],
   [12.2, 0.0001264],
   [12.3, 0.0001266],
   [12.4, 0.0001268],
   [12.5, 0.000127],
   [12.6, 0.0001272],
   [12.7, 0.0001274],
   [12.8, 0.0001276],
   [12.9, 0.0001278],
   [13.0, 0.000128],
   [13.1, 0.0001282],
   [13.2, 0.0001284],
   [13.3, 0.0001286],
   [13.4, 0.0001288],
   [13.5, 0.000129],
   [13.6, 0.0001292],
   [13.7, 0.0001294],
   [13.8, 0.0001296],
   [13.9, 0.0001298],
   [14.0, 0.00013],
   [14.1, 0.0001302],
   [14.2, 0.0001304],
   [14.3, 0.0001306],
   [14.4, 0.0001308],
   [14.5, 0.000131],
   [14.6, 0.0001312],
   [14.7, 0.0001314],
   [14.8, 0.0001316],
   [14.9, 0.0001318],
   [15.0, 0.000132],
   [15.1, 0.0001322],
   [15.2, 0.0001324],
   [15.3, 0.0001326],
   [15.4, 0.0001328],
   [15.5, 0.000133],
   [15.6, 0.0001332],
   [15.7, 0.0001334],
   [15.8, 0.0001336],
   [15.9, 0.0001338],
   [16.0, 0.000134],
   [16.1, 0.0001342],
   [16.2, 0.0001344],
   [16.3, 0.0001346],
   [16.4, 0.0001348],
   [16.5, 0.000135],
   [16.6, 0.0001352],
   [16.7, 0.0001354],
   [16.8, 0.0001356],
   [16.9, 0.0001358],
   [17.0, 0.000136],
   [17.1, 0.0001362],
   [17.2, 0.0001364],
   [17.3, 0.0001366],
   [17.4, 0.0001368],
   [17.5, 0.000137],
   [17.6, 0.0001372],
   [17.7, 0.0001374],
   [17.8, 0.0001376],
   [17.9, 0.0001378],
   [18.0, 0.000138],
   [18.1, 0.0001382],
   [18.2, 0.0001384],
   [18.3, 0.0001386],
   [18.4, 0.0001388],
   [18.5, 0.000139],
   [18.6, 0.0001392],
   [18.7, 0.0001394],
   [18.8, 0.0001396],
   [18.9, 0.0001398],
   [19.0, 0.00014],
   [19.1, 0.0001402],
   [19.2, 0.0001404],
   [19.3, 0.0001406],
   [19.4, 0.0001408],
   [19.5, 0.000141],
   [19.6, 0.0001412],
   [19.7, 0.0001414],
   [19.8, 0.0001416],
   [19.9, 0.0001418],
   [20.0, 0.000142],
   [20.1, 0.0001422],
   [20.2, 0.0001424],
   [20.3, 0.0001426],
   [20.4, 0.0001428],
   [20.5, 0.000143],
   [20.6, 0.0001432],
   [20.7, 0.0001434],
   [20.8, 0.0001436],
   [20.9, 0.0001438],
   [21.0, 0.000144],
   [21.1, 0.0001442],
   [21.2, 0.0001444],
   [21.3, 0.0001446],
   [21.4, 0.0001448],
   [21.5, 0.000145],
   [21.6, 0.0001452],
   [21.7, 0.0001454],
   [21.8, 0.0001456],
   [21.9, 0.0001458],
   [22.0, 0.000146],
   [22.1, 0.0001462],
   [22.2, 0.0001464],
   [22.3, 0.0001466],
   [22.4, 0.0001468],
   [22.5, 0.000147],
   [22.6, 0.0001472],
   [22.7, 0.0001474],
   [22.8, 0.0001476],
   [22.9, 0.0001478],
   [23.0, 0.000148],
   [23.1, 0.0001482],
   [23.2, 0.0001484],
   [23.3, 0.0001486],
   [23.4, 0.0001488],
   [23.5, 0.000149],
   [23.6, 0.0001492],
   [23.7, 0.0001494],
   [23.8, 0.0001496],
   [23.9, 0.0001498],
   [24.0, 0.00015],
   [24.1, 0.0001502],
   [24.2, 0.0001504],
   [24.3, 0.0001506],
   [24.4, 0.0001508],
   [24.5, 0.000151],
   [24.6, 0.0001512],
   [24.7, 0.0001514],
   [24.8, 0.0001516],
   [24.9, 0.0001518],
   [25.0, 0.000152],
   [25.1, 0.0001522],
   [25.2, 0.0001524],
   [25.3, 0.0001526],
   [25.4, 0.0001528],
   [25.5, 0.000153],
   [25.6, 0.0001532],
   [25.7, 0.0001534],
   [25.8, 0.0001536],
   [25.9, 0.0001538],
   [26.0, 0.000154],
   [26.1, 0.0001542],
   [26.2, 0.0001544],
   [26.3, 0.0001546],
   [26.4, 0.0001548],
   [26.5, 0.000155],
   [26.6, 0.0001552],
   [26.7, 0.0001554],
   [26.8, 0.0001556],
   [26.9, 0.0001558],
   [27.0, 0.000156],
   [27.1, 0.0001562],
   [27.2, 0.0001564],
   [27.3, 0.0001566],
   [27.4, 0.0001568],
   [27.5, 0.000157],
   [27.6, 0.0001572],
   [27.7, 0.0001574],
   [27.8, 0.0001576],
   [27.9, 0.0001578],
   [28.0, 0.000158],
   [28.1, 0.0001582],
   [28.2, 0.0001584],
   [28.3, 0.0001586],
   [28.4, 0.0001588],
   [28.5, 0.000159],
   [28.6, 0.0001592],
   [28.7, 0.0001594],
   [28.8, 0.0001596],
   [28.9, 0.0001598],
   [29.0, 0.00016],
   [29.1, 0.0001602],
   [29.2, 0.0001604],
   [29.3, 0.0001606],
   [29.4, 0.0001608],
   [29.5, 0.000161],
   [29.6, 0.0001612],
   [29.7, 0.0001614],
   [29.8, 0.0001616],
   [29.9, 0.0001618],
   [30.0, 0.000162],
   [30.1, 0.0001622],
   [30.2, 0.0001624],
   [30.3, 0.0001626],
   [30.4, 0.0001628],
   [30.5, 0.000163],
   [30.6, 0.0001632],
   [30.7, 0.0001634],
   [30.8, 0.0001636],
   [30.9, 0.0001638],
   [31.0, 0.000164],
   [31.1, 0.0001642],
   [31.2, 0.0001644],
   [31.3, 0.0001646],
   [31.4, 0.0001648],
   [31.5, 0.000165],
   [31.6, 0.0001652],
   [31.7, 0.0001654],
   [31.8, 0.0001656],
   [31.9, 0.0001658],
   [32.0, 0.000166],
   [32.1, 0.0001662],
   [32.2, 0.0001664],
   [32.3, 0.0001666],
   [32.4, 0.0001668],
   [32.5, 0.000167],
   [32.6, 0.0001672],
   [32.7, 0.0001674],
   [32.8, 0.0001676],
   [32.9, 0.0001678],
   [33.0, 0.000168],
   [33.1, 0.0001682],
   [33.2, 0.0001684],
   [33.3, 0.0001686],
   [33.4, 0.0001688],
   [33.5, 0.000169],
   [33.6, 0.0001692],
   [33.7, 0.0001694],
   [33.8, 0.0001696],
   [33.9, 0.0001698],
   [34.0, 0.00017],
   [34.1, 0.0001702],
   [34.2, 0.0001704],
   [34.3, 0.0001706],
   [34.4, 0.0001708],
   [34.5, 0.000171],
   [34.6, 0.0001712],
   [34.7, 0.0001714],
   [34.8, 0.0001716],
   [34.9, 0.0001718],
   [35.0, 0.000172],
   [35.1, 0.0001722],
   [35.2, 0.0001724],
   [35.3, 0.0001726],
   [35.4, 0.0001728],
   [35.5, 0.000173],
   [35.6, 0.0001732],
   [35.7, 0.0001734],
   [35.8, 0.0001736],
   [35.9, 0.0001738],
   [36.0, 0.000174],
   [36.1, 0.0001742],
   [36.2, 0.0001744],
   [36.3, 0.0001746],
   [36.4, 0.0001748],
   [36.5, 0.000175],
   [36.6, 0.0001752],
   [36.7, 0.0001754],
   [36.8, 0.0001756],
   [36.9, 0.0001758],
   [37.0, 0.000176],
   [37.1, 0.0001762],
   [37.2, 0.0001764],
   [37.3, 0.0001766],
   [37.4, 0.0001768],
   [37.5, 0.000177],
   [37.6, 0.0001772],
   [37.7, 0.0001774],
   [37.8, 0.0001776],
   [37.9, 0.0001778],
   [38.0, 0.000178],
   [38.1, 0.0001782],
   [38.2, 0.0001784],
   [38.3, 0.0001786],
   [38.4, 0.0001788],
   [38.5, 0.000179],
   [38.6, 0.0001792],
   [38.7, 0.0001794],
   [38.8, 0.0001796],
   [38.9, 0.0001798],
   [39.0, 0.00018],
   [39.1, 0.0001802],
   [39.2, 0.0001804],
   [39.3, 0.0001806],
   [39.4, 0.0001808],
   [39.5, 0.000181],
   [39.6, 0.0001812],
   [39.7, 0.0001814],
   [39.8, 0.0001816],
   [39.9, 0.0001818],
   [40.0, 0.000182],
   [40.1, 0.0001822],
   [40.2, 0.0001824],
   [40.3, 0.0001826],
   [40.4, 0.0001828],
   [40.5, 0.000183],
   [40.6, 0.0001832],
   [40.7, 0.0001834],
   [40.8, 0.0001836],
   [40.9, 0.0001838],
   [41.0, 0.000184],
   [41.1, 0.0001842],
   [41.2, 0.0001844],
   [41.3, 0.0001846],
   [41.4, 0.0001848],
   [41.5, 0.000185],
   [41.6, 0.0001852],
   [41.7, 0.0001854],
   [41.8, 0.0001856],
   [41.9, 0.0001858],
   [42.0, 0.000186],
   [42.1, 0.0001862],
   [42.2, 0.0001864],
   [42.3, 0.0001866],
   [42.4, 0.0001868],
   [42.5, 0.000187],
   [42.6, 0.0001872],
   [42.7, 0.0001874],
   [42.8, 0.0001876],
   [42.9, 0.0001878],
   [43.0, 0.000188],
   [43.1, 0.0001882],
   [43.2, 0.0001884],
   [43.3, 0.0001886],
   [43.4, 0.0001888],
   [43.5, 0.000189],
   [43.6, 0.0001892],
   [43.7, 0.0001894],
   [43.8, 0.0001896],
   [43.9, 0.0001898],
   [44.0, 0.00019],
   [44.1, 0.0001902],
   [44.2, 0.0001904],
   [44.3, 0.0001906],
   [44.4, 0.0001908],
   [44.5, 0.000191],
   [44.6, 0.0001912],
   [44.7, 0.0001914],
   [44.8, 0.0001916],
   [44.9, 0.0001918],
   [45.0, 0.000192],
   [45.1, 0.0001922],
   [45.2, 0.0001924],
   [45.3, 0.0001926],
   [45.4, 0.0001928],
   [45.5, 0.000193],
   [45.6, 0.0001932],
   [45.7, 0.0001934],
   [45.8, 0.0001936],
   [45.9, 0.0001938],
   [46.0, 0.000194],
   [46.1, 0.0001942],
   [46.2, 0.0001944],
   [46.3, 0.0001946],
   [46.4, 0.0001948],
   [46.5, 0.000195],
   [46.6, 0.0001952],
   [46.7, 0.0001954],
   [46.8, 0.0001956],
   [46.9, 0.0001958],
   [47.0, 0.000196],
   [47.1, 0.0001962],
   [47.2, 0.0001964],
   [47.3, 0.0001966],
   [47.4, 0.0001968],
   [47.5, 0.000197],
   [47.6, 0.0001972],
   [47.7, 0.0001974],
   [47.8, 0.0001976],
   [47.9, 0.0001978],
   [48.0, 0.000198],
   [48.1, 0.0001982],
   [48.2, 0.0001984],
   [48.3, 0.0001986],
   [48.4, 0.0001988],
   [48.5, 0.000199],
   [48.6, 0.0001992],
   [48.7, 0.0001994],
   [48.8, 0.0001996],
   [48.9, 0.0001998],
   [49.0, 0.0002],
   [49.1, 0.0002002],
   [49.2, 0.0002004],
   [49.3, 0.0002006],
   [49.4, 0.0002008],
   [49.5, 0.000201],
   [49.6, 0.0002012],
   [49.7, 0.0002014],
   [49.8, 0.0002016],
   [49.9, 0.0002018],
   [50.0, 0.000202],
   [50.1, 0.0002022],
   [50.2, 0.0002024],
   [50.3, 0.0002026],
   [50.4, 0.0002028],
   [50.5, 0.000203],
   [50.6, 0.0002032],
   [50.7, 0.0002034],
   [50.8, 0.0002036],
   [50.9, 0.0002038],
   [51.0, 0.000204],
   [51.1, 0.0002042],
   [51.2, 0.0002044],
   [51.3, 0.0002046],
   [51.4, 0.0002048],
   [51.5, 0.000205],
   [51.6, 0.0002052],
   [51.7, 0.0002054],
   [51.8, 0.0002056],
   [51.9, 0.0002058],
   [52.0, 0.000206],
   [52.1, 0.0002062],
   [52.2, 0.0002064],
   [52.3, 0.0002066],
   [52.4, 0.0002068],
   [52.5, 0.000207],
   [52.6, 0.0002072],
   [52.7, 0.0002074],
   [52.8, 0.0002076],
   [52.9, 0.0002078],
   [53.0, 0.000208],
   [53.1, 0.0002082],
   [53.2, 0.0002084],
   [53.3, 0.0002086],
   [53.4, 0.0002088],
   [53.5, 0.000209],
   [53.6, 0.0002092],
   [53.7, 0.0002094],
   [53.8, 0.0002096],
   [53.9, 0.0002098],
   [54.0, 0.00021],
   [54.1, 0.0002102],
   [54.2, 0.0002104],
   [54.3, 0.0002106],
   [54.4, 0.0002108],
   [54.5, 0.000211],
   [54.6, 0.0002112],
   [54.7, 0.0002114],
   [54.8, 0.0002116],
   [54.9, 0.0002118],
   [55.0, 0.000212],
   [55.1, 0.0002122],
   [55.2, 0.0002124],
   [55.3, 0.0002126],
   [55.4, 0.0002128],
   [55.5, 0.000213],
   [55.6, 0.0002132],
   [55.7, 0.0002134],
   [55.8, 0.0002136],
   [55.9, 0.0002138],
   [56.0, 0.000214],
   [56.1, 0.0002142],
   [56.2, 0.0002144],
   [56.3, 0.0002146],
   [56.4, 0.0002148],
   [56.5, 0.000215],
   [56.6, 0.0002152],
   [56.7, 0.0002154],
   [56.8, 0.0002156],
   [56.9, 0.0002158],
   [57.0, 0.000216],
   [57.1, 0.0002162],
   [57.2, 0.0002164],
   [57.3, 0.0002166],
   [57.4, 0.0002168],
   [57.5, 0.000217],
   [57.6, 0.0002172],
   [57.7, 0.0002174],
   [57.8, 0.0002176],
   [57.9, 0.0002178],
   [58.0, 0.000218],
   [58.1, 0.0002182],
   [58.2, 0.0002184],
   [58.3, 0.0002186],
   [58.4, 0.0002188],
   [58.5, 0.000219],
   [58.6, 0.0002192],
   [58.7, 0.0002194],
   [58.8, 0.0002196],
   [58.9, 0.0002198],
   [59.0, 0.00022],
   [59.1, 0.0002202],
   [59.2, 0.0002204],
   [59.3, 0.0002206],
   [59.4, 0.0002208],
   [59.5, 0.000221],
   [59.6, 0.0002212],
   [59.7, 0.0002214],
   [59.8, 0.0002216],
   [59.9, 0.0002218],
   [60.0, 0.000222],
   [60.1, 0.0002222],
   [60.2, 0.0002224],
   [60.3, 0.0002226],
   [60.4, 0.0002228],
   [60.5, 0.000223],
   [60.6, 0.0002232],
   [60.7, 0.0002234],
   [60.8, 0.0002236],
   [60.9, 0.0002238],
   [61.0, 0.000224],
   [61.1, 0.0002242],
   [61.2, 0.0002244],
   [61.3, 0.0002246],
   [61.4, 0.0002248],
   [61.5, 0.000225],
   [61.6, 0.0002252],
   [61.7, 0.0002254],
   [61.8, 0.0002256],
   [61.9, 0.0002258],
   [62.0, 0.000226],
   [62.1, 0.0002262],
   [62.2, 0.0002264],
   [62.3, 0.0002266],
   [62.4, 0.0002268],
   [62.5, 0.000227],
   [62.6, 0.0002272],
   [62.7, 0.0002274],
   [62.8, 0.0002276],
   [62.9, 0.0002278],
   [63.0, 0.000228],
   [63.1, 0.0002282],
   [63.2, 0.0002284],
   [63.3, 0.0002286],
   [63.4, 0.0002288],
   [63.5, 0.000229],
   [63.6, 0.0002292],
   [63.7, 0.0002294],
   [63.8, 0.0002296],
   [63.9, 0.0002298],
   [64.0, 0.00023],
   [64.1, 0.0002302],
   [64.2, 0.0002304],
   [64.3, 0.0002306],
   [64.4, 0.0002308],
   [64.5, 0.000231],
   [64.6, 0.0002312],
   [64.7, 0.0002314],
   [64.8, 0.0002316],
   [64.9, 0.0002318],
   [65.0, 0.000232],
   [65.1, 0.0002322],
   [65.2, 0.0002324],
   [65.3, 0.0002326],
   [65.4, 0.0002328],
   [65.5, 0.000233],
   [65.6, 0.0002332],
   [65.7, 0.0002334],
   [65.8, 0.0002336],
   [65.9, 0.0002338],
   [66.0, 0.000234],
   [66.1, 0.0002342],
   [66.2, 0.0002344],
   [66.3, 0.0002346],
   [66.4, 0.0002348],
   [66.5, 0.000235],
   [66.6, 0.0002352],
   [66.7, 0.0002354],
   [66.8, 0.0002356],
   [66.9, 0.0002358],
   [67.0, 0.000236],
   [67.1, 0.0002362],
   [67.2, 0.0002364],
   [67.3, 0.0002366],
   [67.4, 0.0002368],
   [67.5, 0.000237],
   [67.6, 0.0002372],
   [67.7, 0.0002374],
   [67.8, 0.0002376],
   [67.9, 0.0002378],
   [68.0, 0.000238],
   [68.1, 0.0002382],
   [68.2, 0.0002384],
   [68.3, 0.0002386],
   [68.4, 0.0002388],
   [68.5, 0.000239],
   [68.6, 0.0002392],
   [68.7, 0.0002394],
   [68.8, 0.0002396],
   [68.9, 0.0002398],
   [69.0, 0.00024],
   [69.1, 0.0002402],
   [69.2, 0.0002404],
   [69.3, 0.0002406],
   [69.4, 0.0002408],
   [69.5, 0.000241],
   [69.6, 0.0002412],
   [69.7, 0.0002414],
   [69.8, 0.0002416],
   [69.9, 0.0002418],
   [70.0, 0.000242],
   [70.1, 0.0002422],
   [70.2, 0.0002424],
   [70.3, 0.0002426],
   [70.4, 0.0002428],
   [70.5, 0.000243],
   [70.6, 0.0002432],
   [70.7, 0.0002434],
   [70.8, 0.0002436],
   [70.9, 0.0002438],
   [71.0, 0.000244],
   [71.1, 0.0002442],
   [71.2, 0.0002444],
   [71.3, 0.0002446],
   [71.4, 0.0002448],
   [71.5, 0.000245],
   [71.6, 0.0002452],
   [71.7, 0.0002454],
   [71.8, 0.0002456],
   [71.9, 0.0002458],
   [72.0, 0.000246],
   [72.1, 0.0002462],
   [72.2, 0.0002464],
   [72.3, 0.0002466],
   [72.4, 0.0002468],
   [72.5, 0.000247],
   [72.6, 0.0002472],
   [72.7, 0.0002474],
   [72.8, 0.0002476],
   [72.9, 0.0002478],
   [73.0, 0.000248],
   [73.1, 0.0002482],
   [73.2, 0.0002484],
   [73.3, 0.0002486],
   [73.4, 0.0002488],
   [73.5, 0.000249],
   [73.6, 0.0002492],
   [73.7, 0.0002494],
   [73.8, 0.0002496],
   [73.9, 0.0002498],
   [74.0, 0.00025],
   [74.1, 0.0002502],
   [74.2, 0.0002504],
   [74.3, 0.0002506],
   [74.4, 0.0002508],
   [74.5, 0.000251],
   [74.6, 0.0002512],
   [74.7, 0.0002514],
   [74.8, 0.0002516],
   [74.9, 0.0002518],
   [75.0, 0.000252],
   [75.1, 0.0002522],
   [75.2, 0.0002524],
   [75.3, 0.0002526],
   [75.4, 0.0002528],
   [75.5, 0.000253],
   [75.6, 0.0002532],
   [75.7, 0.0002534],
   [75.8, 0.0002536],
   [75.9, 0.0002538],
   [76.0, 0.000254],
   [76.1, 0.0002542],
   [76.2, 0.0002544],
   [76.3, 0.0002546],
   [76.4, 0.0002548],
   [76.5, 0.000255],
   [76.6, 0.0002552],
   [76.7, 0.0002554],
   [76.8, 0.0002556],
   [76.9, 0.0002558],
   [77.0, 0.000256],
   [77.1, 0.0002562],
   [77.2, 0.0002564],
   [77.3, 0.0002566],
   [77.4, 0.0002568],
   [77.5, 0.000257],
   [77.6, 0.0002572],
   [77.7, 0.0002574],
   [77.8, 0.0002576],
   [77.9, 0.0002578],
   [78.0, 0.000258],
   [78.1, 0.0002582],
   [78.2, 0.0002584],
   [78.3, 0.0002586],
   [78.4, 0.0002588],
   [78.5, 0.000259],
   [78.6, 0.0002592],
   [78.7, 0.0002594],
   [78.8, 0.0002596],
   [78.9, 0.0002598],
   [79.0, 0.00026],
   [79.1, 0.0002602],
   [79.2, 0.0002604],
   [79.3, 0.0002606],
   [79.4, 0.0002608],
   [79.5, 0.000261],
   [79.6, 0.0002612],
   [79.7, 0.0002614],
   [79.8, 0.0002616],
   [79.9, 0.0002618],
   [80.0, 0.000262],
   [80.1, 0.0002622],
   [80.2, 0.0002624],
   [80.3, 0.0002626],
   [80.4, 0.0002628],
   [80.5, 0.000263],
   [80.6, 0.0002632],
   [80.7, 0.0002634],
   [80.8, 0.0002636],
   [80.9, 0.0002638],
   [81.0, 0.000264],
   [81.1, 0.0002642],
   [81.2, 0.0002644],
   [81.3, 0.0002646],
   [81.4, 0.0002648],
   [81.5, 0.000265],
   [81.6, 0.0002652],
   [81.7, 0.0002654],
   [81.8, 0.0002656],
   [81.9, 0.0002658],
   [82.0, 0.000266],
   [82.1, 0.0002662],
   [82.2, 0.0002664],
   [82.3, 0.0002666],
   [82.4, 0.0002668],
   [82.5, 0.000267],
   [82.6, 0.0002672],
   [82.7, 0.0002674],
   [82.8, 0.0002676],
   [82.9, 0.0002678],
   [83.0, 0.000268],
   [83.1, 0.0002682],
   [83.2, 0.0002684],
   [83.3, 0.0002686],
   [83.4, 0.0002688],
   [83.5, 0.000269],
   [83.6, 0.0002692],
   [83.7, 0.0002694],
   [83.8, 0.0002696],
   [83.9, 0.0002698],
   [84.0, 0.00027],
   [84.1, 0.0002702],
   [84.2, 0.0002704],
   [84.3, 0.0002706],
   [84.4, 0.0002708],
   [84.5, 0.000271],
   [84.6, 0.0002712],
   [84.7, 0.0002714],
   [84.8, 0.0002716],
   [84.9, 0.0002718],
   [85.0, 0.000272],
   [85.1, 0.0002722],
   [85.2, 0.0002724],
   [85.3, 0.0002726],
   [85.4, 0.0002728],
   [85.5, 0.000273],
   [85.6, 0.0002732],
   [85.7, 0.0002734],
   [85.8, 0.0002736],
   [85.9, 0.0002738],
   [86.0, 0.000274],
   [86.1, 0.0002742],
   [86.2, 0.0002744],
   [86.3, 0.0002746],
   [86.4, 0.0002748],
   [86.5, 0.000275],
   [86.6, 0.0002752],
   [86.7, 0.0002754],
   [86.8, 0.0002756],
   [86.9, 0.0002758],
   [87.0, 0.000276],
   [87.1, 0.0002762],
   [87.2, 0.0002764],
   [87.3, 0.0002766],
   [87.4, 0.0002768],
   [87.5, 0.000277],
   [87.6, 0.0002772],
   [87.7, 0.0002774],
   [87.8, 0.0002776],
   [87.9, 0.0002778],
   [88.0, 0.000278],
   [88.1, 0.0002782],
   [88.2, 0.0002784],
   [88.3, 0.0002786],
   [88.4, 0.0002788],
   [88.5, 0.000279],
   [88.6, 0.0002792],
   [88.7, 0.0002794],
   [88.8, 0.0002796],
   [88.9, 0.0002798],
   [89.0, 0.00028],
   [89.1, 0.0002802],
   [89.2, 0.0002804],
   [89.3, 0.0002806],
   [89.4, 0.0002808],
   [89.5, 0.000281],
   [89.6, 0.0002812],
   [89.7, 0.0002814],
   [89.8, 0.0002816],
   [89.9, 0.0002818],
   [90.0, 0.000282],
   [90.1, 0.0002822],
   [90.2, 0.0002824],
   [90.3, 0.0002826],
   [90.4, 0.0002828],
   [90.5, 0.000283],
   [90.6, 0.0002832],
   [90.7, 0.0002834],
   [90.8, 0.0002836],
   [90.9, 0.0002838],
   [91.0, 0.000284],
   [91.1, 0.0002842],
   [91.2, 0.0002844],
   [91.3, 0.0002846],
   [91.4, 0.0002848],
   [91.5, 0.000285],
   [91.6, 0.0002852],
   [91.7, 0.0002854],
   [91.8, 0.0002856],
   [91.9, 0.0002858],
   [92.0, 0.000286],
   [92.1, 0.0002862],
   [92.2, 0.0002864],
   [92.3, 0.0002866],
   [92.4, 0.0002868],
   [92.5, 0.000287],
   [92.6, 0.0002872],
   [92.7, 0.0002874],
   [92.8, 0.0002876],
   [92.9, 0.0002878],
   [93.0, 0.000288],
   [93.1, 0.0002882],
   [93.2, 0.0002884],
   [93.3, 0.0002886],
   [93.4, 0.0002888],
   [93.5, 0.000289],
   [93.6, 0.0002892],
   [93.7, 0.0002894],
   [93.8, 0.0002896],
   [93.9, 0.0002898],
   [94.0, 0.00029],
   [94.1, 0.0002902],
   [94.2, 0.0002904],
   [94.3, 0.0002906],
   [94.4, 0.0002908],
   [94.5, 0.000291],
   [94.6, 0.0002912],
   [94.7, 0.0002914],
   [94.8, 0.0002916],
   [94.9, 0.0002918],
   [95.0, 0.000292],
   [95.1, 0.0002922],
   [95.2, 0.0002924],
   [95.3, 0.0002926],
   [95.4, 0.0002928],
   [95.5, 0.000293],
   [95.6, 0.0002932],
   [95.7, 0.0002934],
   [95.8, 0.0002936],
   [95.9, 0.0002938],
   [96.0, 0.000294],
   [96.1, 0.0002942],
   [96.2, 0.0002944],
   [96.3, 0.0002946],
   [96.4, 0.0002948],
   [96.5, 0.000295],
   [96.6, 0.0002952],
   [96.7, 0.0002954],
   [96.8, 0.0002956],
   [96.9, 0.0002958],
   [97.0, 0.000296],
   [97.1, 0.0002962],
   [97.2, 0.0002964],
   [97.3, 0.0002966],
   [97.4, 0.0002968],
   [97.5, 0.000297],
   [97.6, 0.0002972],
   [97.7, 0.0002974],
   [97.8, 0.0002976],
   [97.9, 0.0002978],
   [98.0, 0.000298],
   [98.1, 0.0002982],
   [98.2, 0.0002984],
   [98.3, 0.0002986],
   [98.4, 0.0002988],
   [98.5, 0.000299],
   [98.6, 0.0002992],
   [98.7, 0.0002994],
   [98.8, 0.0002996],
   [98.9, 0.0002998],
   [99.0, 0.0003],
   [99.1, 0.0003002],
   [99.2, 0.0003004],
   [99.3, 0.0003006],
   [99.4, 0.0003008],
   [99.5, 0.000301],
   [99.6, 0.0003012],
   [99.7, 0.0003014],
   [99.8, 0.0003016],
   [99.9, 0.0003018],
   [100.0, 0.000302],
   // END OF GENERATED DATA FROM generated_adf_critical_values_table.csv
];

// Function to interpolate p-value from the lookup table
fn interpolate_p_value(test_stat: f64) -> f64 {
    // Handle edge cases outside the table range
    if test_stat <= ADF_P_VALUE_LOOKUP[0][0] {
        return ADF_P_VALUE_LOOKUP[0][1];
    }
    if test_stat >= ADF_P_VALUE_LOOKUP[ADF_P_VALUE_LOOKUP.len() - 1][0] {
        return ADF_P_VALUE_LOOKUP[ADF_P_VALUE_LOOKUP.len() - 1][1];
    }

    // Binary search to find the correct interval
    let index = match ADF_P_VALUE_LOOKUP.binary_search_by(|entry| entry[0].partial_cmp(&test_stat).unwrap()) {
        Ok(i) => return ADF_P_VALUE_LOOKUP[i][1], // Exact match
        Err(i) => i, // Insertion point, which is the index of the first element greater than test_stat
    };

    // Linear interpolation
    let lower = ADF_P_VALUE_LOOKUP[index - 1];
    let upper = ADF_P_VALUE_LOOKUP[index];

    let x0 = lower[0];
    let y0 = lower[1];
    let x1 = upper[0];
    let y1 = upper[1];

    y0 + (test_stat - x0) * (y1 - y0) / (x1 - x0)
}

#[wasm_bindgen]
pub fn adf_test(data_js: &js_sys::Float64Array, regression_type: &str, num_lags: usize) -> Result<js_sys::Object, JsValue> {
    let data_vec: Vec<f64> = data_js.to_vec();
    let y = Array1::from(data_vec);
    let n = y.len();

    if n <= num_lags + 1 {
        return Err(JsValue::from_str("Not enough data points for the given number of lags."));
    }

    // Calculate differenced series (delta_y)
    let delta_y: Array1<f64> = y.slice(s![1..]).iter()
        .zip(y.slice(s![..n-1]).iter())
        .map(|(&current, &previous)| current - previous)
        .collect();

    let n_diff = delta_y.len();

    // Prepare lagged differenced series (delta_y_lagged)
    let mut delta_y_lagged_cols = Vec::new();
    for i in 0..num_lags {
        delta_y_lagged_cols.push(delta_y.slice(s![num_lags - i - 1 .. n_diff - i - 1]).to_owned());
    }

    // Prepare lagged y series (y_lagged)
    let y_lagged = y.slice(s![num_lags .. n-1]).to_owned();

    // Construct the design matrix X
    let mut x_cols = Vec::new();
    x_cols.push(y_lagged); // First column is y_{t-1}

    for col in delta_y_lagged_cols {
        x_cols.push(col);
    }

    // Add intercept and/or trend based on regression_type
    match regression_type {
        "c" | "ct" => { // Add intercept
            let ones = Array1::from_elem(x_cols[0].len(), 1.0);
            x_cols.push(ones);
        },
        _ => {} // No intercept for "nc"
    }

    if regression_type == "ct" { // Add trend
        let trend: Array1<f64> = Array1::from_iter((1..=x_cols[0].len()).map(|i| i as f64));
        x_cols.push(trend);
    }

    let num_regressors = x_cols.len();
    let num_observations = x_cols[0].len();

    let mut x_data = Vec::with_capacity(num_observations * num_regressors);
    for i in 0..num_observations {
        for j in 0..num_regressors {
            x_data.push(x_cols[j][i]);
        }
    }
    let x = Array2::from_shape_vec((num_observations, num_regressors), x_data)
        .map_err(|e| JsValue::from_str(&format!("Failed to create X matrix: {}", e)))?;

    // Dependent variable for regression (delta_y_t)
    let delta_y_t = delta_y.slice(s![num_lags..]).to_owned();

    // OLS Regression: beta = (X'X)^-1 X'y
    let xt = x.t();
    let xtx = xt.dot(&x);
    let xtx_inv = xtx.inv().map_err(|e| JsValue::from_str(&format!("Failed to invert X'X: {}", e)))?;
    let xty = xt.dot(&delta_y_t);
    let beta = xtx_inv.dot(&xty);

    // The coefficient for y_{t-1} (alpha - 1) is the first element of beta
    let alpha_minus_1 = beta[0];

    // Calculate residuals
    let y_hat = x.dot(&beta);
    let residuals = &delta_y_t - &y_hat;

    // Calculate standard error of residuals (sigma_hat)
    let sigma_hat_sq = residuals.iter().map(|&r| r * r).sum::<f64>() / (num_observations as f64 - num_regressors as f64);
    let sigma_hat = sigma_hat_sq.sqrt();

    // Calculate standard error of alpha_minus_1
    let se_alpha_minus_1 = sigma_hat * xtx_inv[[0, 0]].sqrt();

    // Calculate ADF test statistic
    let adf_stat = alpha_minus_1 / se_alpha_minus_1;

    // Interpolate p-value
    let p_value = interpolate_p_value(adf_stat);

    // Create JS object for results
    let results = js_sys::Object::new();
    js_sys::Reflect::set(&results, &JsValue::from_str("adfStat"), &JsValue::from_f64(adf_stat))?;
    js_sys::Reflect::set(&results, &JsValue::from_str("pValue"), &JsValue::from_f64(p_value))?;
    js_sys::Reflect::set(&results, &JsValue::from_str("alphaMinusOne"), &JsValue::from_f64(alpha_minus_1))?;
    js_sys::Reflect::set(&results, &JsValue::from_str("seAlphaMinusOne"), &JsValue::from_f64(se_alpha_minus_1))?;
    js_sys::Reflect::set(&results, &JsValue::from_str("numObservations"), &JsValue::from_f64(num_observations as f64))?;
    js_sys::Reflect::set(&results, &JsValue::from_str("numLags"), &JsValue::from_f64(num_lags as f64))?;
    js_sys::Reflect::set(&results, &JsValue::from_str("regressionType"), &JsValue::from_str(regression_type))?;

    Ok(results)
}
